Emparejar en las entradas de la base de datos el identificador de telegram con el identificador del cliente raspberry pi.
Lo más fácil sería utilizar como MonitorId el identificador de telegram, y así tenemos sólo un campo para buscar.

En bot.procesarEstados en bot.js
Hay que añadir un campo a la base de datos para mostrar cuándo se envió el último aviso al usuario.
Hay que añadir un campo a la base de datos para mostrar la última caída detectada.

[BOT] Caso 1: Nuevo registro de usuario
Cuando un usuario se da de alta en el bot (/start)
1. Insertar/Actualizar un registro en la base de datos para el id de telegram.

[BOT] Caso 2: Notificar un corte de corriente.
SI
    1. la fecha de última actualización es más antigua que un tiempo límite
    Y
    2. La fecha de última caída es anterior a la fecha de la última actualización
ENTONCES
    1. Enviar mensaje al usuario indicando que el sistema está caído en la fecha actual.
    2. Actualizar el registro actualizando la fecha de última caída y la fecha de última notificación.
FIN

[BOT] Caso 3: Comprobar última actualización
Si recibimos el comando /comprobar
1. Buscar el monitor en la base de datos
2. SI El monitor está registrado
    2a.1 SI El monitor tiene actualización
        2a.1a.1 Enviar mensaje al usuario con los datos del registro: monitorid, última actualización y estado (con las mismas condiciones de siempre: online/offline si la última actualización está dentro/fuera del periodo).
    2a.1 SI NO
        2a.1b.1 Enviar mensaje al usuario indicando que el monitor no ha enviado ninguna acutalización hasta la fecha.
2. SI NO
    2b.1 Enviar mensaje al usuario diciendo que el monitor no está registrado.
2. FIN

[BOT] Caso 4: Baja de un usuario
Si un usuario desactiva el bot, hay que borrar su registro correspondiente.

[WEB] Caso 1: Recibir solicitud de actualización
1. Recibimos actualización de un monitor.
2. Buscar el monitor en la base de datos.
3. SI El monitor está registrado
    3.1 Actualizar la fecha de última actualización en el registro.
    3.2. SI
        3.2a.1. La fecha de última actualización es más reciente que la de la última caída
        Y
        3.2a.2. La fecha de última notificación es anterior a la de última caída
    3.2 ENTONCES
        3.2b.1. Enviar mensaje al usuario indicando que el el sistema está restituido en la fecha acual después de la (fecha de última caída).
        3.2b.2. Actualizar el registro poniendo la fecha de última notificación.
    3.2 FIN SI
3. FIN SI